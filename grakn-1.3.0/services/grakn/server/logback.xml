<!--
  ~ GRAKN.AI - THE KNOWLEDGE GRAPH
  ~ Copyright (C) 2018 Grakn Labs Ltd
  ~
  ~ This program is free software: you can redistribute it and/or modify
  ~ it under the terms of the GNU Affero General Public License as
  ~ published by the Free Software Foundation, either version 3 of the
  ~ License, or (at your option) any later version.
  ~
  ~ This program is distributed in the hope that it will be useful,
  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of
  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  ~ GNU Affero General Public License for more details.
  ~
  ~ You should have received a copy of the GNU Affero General Public License
  ~ along with this program.  If not, see <https://www.gnu.org/licenses/>.
  -->

<configuration debug="false">

    <property name="graknLogFileName" value="grakn.log"/>
    <property name="graknPPLogFileName" value="grakn-postprocessing.log"/>

    <!--Configure a properties file (located on the classpath) from which values can be referenced-->
    <property resource="grakn.properties"/>

    <!--Extract the directory of the grakn logs from the properties file. If the path is relative it
    will be appended to the directory containing grakn (system property grakn.dir). Otherwise the absolute
    path is used. -->
    <if condition='property("log.dirs").startsWith("/")'>
        <then>
            <property name="configuredLogDir" value="${log.dirs}" />
        </then>
        <else>
            <property name="configuredLogDir" value="${grakn.dir}/${log.dirs}" />
        </else>
    </if>

    <!--Configure the standard out appender used to print the Grakn logo-->
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>%msg%n</pattern>
        </encoder>
    </appender>

    <!--Configure the "main" appender used for all non-post processing Grakn logs. Logs are kept for
        60 days and each file is capped at 50MB, but at most 1GB -->
    <appender name="MAIN" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${configuredLogDir}/${graknLogFileName}</file>
        <encoder>
            <pattern>%date{ISO8601} [%thread] %-5level %logger{36} - %msg%n</pattern>
        </encoder>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>${graknLogFileName}-%d{yyyy-MM}.%i.log.gz</fileNamePattern>
            <maxFileSize>50MB</maxFileSize>
            <maxHistory>60</maxHistory>
            <totalSizeCap>1GB</totalSizeCap>
        </rollingPolicy>
    </appender>

    <!--Configure the post processing appender used for logs in the post processing package-->
    <appender name="POST-PROCESSING" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${configuredLogDir}/${graknPPLogFileName}</file>
        <encoder>
            <pattern>%date{ISO8601} [%thread] %-5level %logger{36} - %msg%n</pattern>
        </encoder>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>${graknPPLogFileName}-%d{yyyy-MM}.%i.log.gz</fileNamePattern>
            <maxFileSize>50MB</maxFileSize>
            <maxHistory>60</maxHistory>
            <totalSizeCap>1GB</totalSizeCap>
        </rollingPolicy>
    </appender>

    <root level="INFO"/>

    <logger name="org.eclipse.jetty" level="${jetty.log.level:-ERROR}">
        <appender-ref ref="${jetty.log.appender:-MAIN}"/>
    </logger>

    <!--All GRAKN logs go to main log file-->
    <logger name="ai.grakn" level="${log.level:-INFO}">
        <appender-ref ref="MAIN"/>
    </logger>

    <!--Only show ERROR logs from apache classes-->
    <logger name="org.apache" level="ERROR">
        <appender-ref ref="MAIN"/>
    </logger>

    <!--GRAKN ASCII text on startup goes to Standard Out-->
    <logger name="ai.grakn.engine.Server" level="INFO">
        <appender-ref ref="STDOUT"/>
    </logger>

    <!--Post Processing logs go to separate log file-->
    <logger name="ai.grakn.engine.task.postprocessing" level="${log.level:-INFO}" additivity="false">
        <appender-ref ref="POST-PROCESSING"/>
    </logger>

    <!-- It is possible to change the logging level to a more granular level. For example:-->
    <!--<logger name="ai.grakn.engine.postprocessing.PostProcessing" level="DEBUG">-->
        <!--<appender-ref ref="FILE"/>-->
    <!--</logger>-->
</configuration>
